{"ast":null,"code":"import _classCallCheck from \"/Users/TI/react/todo-list/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/TI/react/todo-list/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/TI/react/todo-list/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/TI/react/todo-list/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/TI/react/todo-list/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/TI/react/todo-list/src/App.js\";\nimport React, { Component } from 'react'; //import List from './List';\n\nimport classes from './App.module.css';\nimport Layout from './layout/Layout';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.App,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"hisYou separate the two, the container component manages the data, actions, business interactions with the rest of the app, while the presentation component only handles presentation with props it receives from its container and any user interactions are passed to the container component instead of itself interacting with the rest of the application.\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/TI/react/todo-list/src/App.js"],"names":["React","Component","classes","Layout","App"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;IAEMC,G;;;;;;;;;;;;;6BAEK;AACP,aACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAEF,OAAO,CAACE,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4WAA7B,CADA,CADF;AAOD;;;;EAVeH,S;;AAiBlB,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\n//import List from './List';\nimport classes from './App.module.css'\nimport Layout from './layout/Layout';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Layout>\n      <div className={classes.App}><p>hisYou separate the two, the container component manages the data, actions, business interactions with the rest of the app, while the presentation component only handles presentation with props it receives from its container and any user interactions are passed to the container component instead of itself interacting with the rest of the application.</p></div>\n      </Layout>\n    )\n      \n    \n  }\n\n}\n\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
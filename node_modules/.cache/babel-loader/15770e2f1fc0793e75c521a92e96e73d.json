{"ast":null,"code":"/* global Element */\nif (Element && !Element.prototype.matches) {\n  var proto = Element.prototype;\n  proto.matches = proto.matchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector || proto.oMatchesSelector || proto.webkitMatchesSelector;\n}\n\nvar closest = function closest(el, selector, rootNode) {\n  var element = el;\n\n  while (element) {\n    var isRoot = element === rootNode || element === document.body;\n\n    if (isRoot || element.matches(selector)) {\n      if (isRoot) {\n        element = null;\n      }\n\n      break;\n    }\n\n    element = element.parentNode;\n  }\n\n  return element;\n};\n\nvar getScrollElement = function getScrollElement(el) {\n  var element = el;\n\n  do {\n    var _window$getComputedSt = window.getComputedStyle(element),\n        overflow = _window$getComputedSt.overflow;\n\n    if ((overflow === 'auto' || overflow === 'scroll') && element && element.nodeType && (element.offsetWidth < element.scrollWidth || element.offsetHeight < element.scrollHeight)) {\n      break;\n    }\n\n    if (!element || !element.nodeType || element === document.body) {\n      element = null;\n      break;\n    }\n\n    element = element.parentNode;\n  } while (element);\n\n  return element;\n};\n\nvar getDomIndex = function getDomIndex(el, ignoreSelectors) {\n  return Array.from(el.parentNode.children).filter(function (e) {\n    return ignoreSelectors === '' ? true : !e.matches(ignoreSelectors);\n  }).indexOf(el);\n};\n\nexport { getScrollElement, closest, getDomIndex };","map":null,"metadata":{},"sourceType":"module"}